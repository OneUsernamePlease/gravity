var E=Object.defineProperty;var C=(n,t,e)=>t in n?E(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var d=(n,t,e)=>C(n,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const u of o.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&s(u)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();class a{constructor(t,e){t===void 0&&(t=0),e===void 0&&(e=0),this.x=t,this.y=e}toString(){return`x: ${this.x}, y: ${this.y}`}static add(...t){return t.reduce((e,s)=>({x:e.x+s.x,y:e.y+s.y}),{x:0,y:0})}static subtract(t,e){return{x:t.x-e.x,y:t.y-e.y}}static scale(t,e){return{x:t.x*e,y:t.y*e}}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static magnitude(t){return Math.sqrt(t.x*t.x+t.y*t.y)}static normalize(t){const e=this.magnitude(t);return e===0?{x:0,y:0}:this.scale(t,1/e)}static distance(t,e){return Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2)}static displacementVector(t,e){return this.subtract(e,t)}static hadamardProduct(t,e){return{x:t.x*e.x,y:t.y*e.y}}}class S{constructor(t,e,s,i){d(this,"_mass");d(this,"_radius");d(this,"_color");d(this,"_movable");d(this,"defaultDensity",1);t===void 0&&(t=25),e===void 0&&(e=(3*this.mass/(4*Math.PI*this.defaultDensity))**(1/3)),s===void 0&&(s="white"),i===void 0&&(i=!0),this.mass=t,this.radius=e,this.color=s,this.movable=i}get mass(){return this._mass}set mass(t){this._mass=t}get radius(){return this._radius}set radius(t){this._radius=t}get movable(){return this._movable}set movable(t){this._movable=t}get color(){return this._color}set color(t){CSS.supports("color",t)||(t="white"),this._color=t}}class I{constructor(){d(this,"_objectStates");d(this,"running");d(this,"tickCount");d(this,"_tickLength");d(this,"_g");this._objectStates=[],this.running=!1,this.tickCount=0,this._tickLength=10,this._g=1}get objectStates(){return this._objectStates}get tickLength(){return this._tickLength}set tickLength(t){this._tickLength=t}get g(){return this._g}set g(t){this._g=Math.max(t,Number.MIN_VALUE)}nextBodyState(t){const e=this.tickLength/1e3;t.body.movable&&(t.velocity=a.add(t.velocity,a.scale(t.acceleration,e)),t.position=a.add(t.position,a.scale(t.velocity,e)))}addObject(t){return t.body.movable||(t.velocity=new a(0,0),t.acceleration=new a(0,0)),this._objectStates.push(t),this._objectStates.length}clearObjects(){this._objectStates=[]}pause(){this.running=!1}nextState(){this.updateAccelerationVectors(),this.objectStates.forEach(t=>{this.nextBodyState(t)}),this.tickCount++}updateAccelerationVectors(){const t=new Map;for(let e=0;e<this.objectStates.length;e++)for(let s=e+1;s<this.objectStates.length;s++){const i=this.calculateForceBetweenBodies(e,s),o=a.scale(i,-1);t.set(e,t.has(e)?a.add(t.get(e),i):i),t.set(s,t.has(s)?a.add(t.get(s),o):o)}this.objectStates.forEach((e,s)=>{const i=t.get(s);let o=i!==void 0?i:new a(0,0);o=a.scale(o,1/e.body.mass),e.acceleration=o})}calculateForceBetweenBodies(t,e){const s=this.objectStates[t],i=this.objectStates[e],o=a.distance(s.position,i.position);if(o<1e-10)return new a(0,0);const u=this.g*(s.body.mass*i.body.mass/(o*o)),h=a.normalize(a.subtract(i.position,s.position));return a.scale(h,u)}run(){if(this.running)return;this.running=!0;const t=()=>{this.running&&(this.nextState(),setTimeout(t,this.tickLength),this.log("running simulation step "+this.tickCount))};t()}log(t){const e=new Date,s=e.getHours().toString().padStart(2,"0"),i=e.getMinutes().toString().padStart(2,"0"),o=e.getSeconds().toString().padStart(2,"0"),u=e.getMilliseconds().toString().padStart(3,"0"),h=`${s}:${i}:${o}.${u}`;console.log(`[${h}] ${t}`)}}document.addEventListener("DOMContentLoaded",T);let l,r,v,_,M,c,g,O=25,m=!1;function T(){v=document.getElementById("statusText1"),_=document.getElementById("statusText2"),M=document.getElementById("statusText3"),P(),$(1280,720),g={origin:{x:0,y:0},zoomFactor:1,orientationY:-1},c=new I,document.removeEventListener("DOMContentLoaded",T)}function P(){var n,t;(n=document.getElementById("canvasBtnStartSim"))==null||n.addEventListener("click",H),(t=document.getElementById("canvasBtnToggleSim"))==null||t.addEventListener("click",D)}function y(n,t){t===void 0&&(t=v),t.innerHTML=n}function k(n,t){t===void 0&&(t=v),t.innerHTML+=n}function $(n,t){l=document.getElementById("theCanvas"),l.width=n,l.height=t,r=l.getContext("2d"),k(` - Canvas dimension: ${n} * ${t}`,M)}function w(n,t,e){e===void 0&&(e="white");let s=a.add(n,t);r.beginPath(),r.lineWidth=3,r.strokeStyle=e,r.moveTo(n.x,n.y),r.lineTo(s.x,s.y),r.stroke()}function j(n,t){r.beginPath(),r.arc(t.x,t.y,n.radius/g.zoomFactor,0,Math.PI*2),r.closePath(),r.fillStyle=n.color,r.fill()}function V(){c.objectStates.forEach(t=>{t!==null&&j(t.body,f(t.position))})}function F(){r.clearRect(0,0,l.width,l.height),V(),z()}function z(){c.objectStates.forEach(n=>{w(f(n.position),f(n.acceleration),"green"),w(f(n.position),f(n.velocity),"red")})}function f(n){const t=a.subtract(n,g.origin),e={x:t.x,y:t.y*-1};return a.scale(e,1/g.zoomFactor)}function b(n){let t;return t=a.add(a.hadamardProduct(a.scale(n,g.zoomFactor),{x:1,y:g.orientationY}),g.origin),t}function A(){let n=l.width,t=l.height,e={x:n/2,y:t/2},s=new a(0,0),i=b({x:e.x,y:e.y}),o=b({x:e.x+500,y:e.y-50}),u={x:0,y:0},h={x:-110,y:-110};L(p(1e7,50),i,u,s),L(p(1e3),o,h)}function D(n){c.running?(m=!1,c.pause(),document.getElementById("canvasBtnToggleSim").innerHTML="Resume",y("Simulation paused")):(document.getElementById("canvasBtnToggleSim").innerHTML="Pause",N(),B(),y("Simulation running"))}function L(n,t,e,s,i){if(n===void 0&&(n=p()),t===void 0){const u=x(n.radius,l.width-n.radius),h=x(n.radius,l.height-n.radius);t={x:u,y:h}}e===void 0&&(e={x:0,y:0}),s===void 0&&(s={x:0,y:0});const o={body:n,position:t,velocity:e,acceleration:s};c.addObject(o)}function H(){c.clearObjects(),c.tickCount=0,y("Simulation running"),document.getElementById("canvasBtnToggleSim").innerHTML="Pause",A(),c.run(),B()}function N(){c.running||(c.run(),B())}function B(){if(m)return;m=!0;const n=()=>{m&&(F(),y(`Simulation Tick: ${c.tickCount}`,_),setTimeout(n,O))};n()}function p(n,t){let e;return n===void 0&&t===void 0?e=new S(x(20,200)):t===void 0?e=new S(n):e=new S(n,t),e}function x(n,t){return Math.floor(Math.random()*(t-n+1)+n)}
//# sourceMappingURL=index-077CZD6a.js.map
